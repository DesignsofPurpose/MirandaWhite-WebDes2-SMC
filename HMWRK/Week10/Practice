//Wrapper CSS//

.box{
    background-color: transparent;
    color: #fff;
    border-radius: 0px;
    padding: 20px;
    font-size: 150%;
  }
  
.box:nth-child(even){
    background-color: none;
    color: none;
  }
  
    .wrapper {
      margin: 0px;
      display: inline-flex;
      border: 0px solid #000;
      grid-gap: 0px;
      grid-template-columns: 20% 20% 20% 20%;
      grid-template-areas: 0;
      grid-row: 0;
      width: 0;
    }
    #lrgImg{
        display: block;
        image: 50%;
        
    }


    //deleted DIV//
            <div class="row" id="lrgImg">
            <div class="column">
                <img src="pexels-athena-3095537.webp" alt="polaroid5" id="pen" style="width:100%">
            </div>



//Professor's Code//
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>What JS can do</title>
    <style>
        body {
            margin: 0px;
        }
        header {
            height: 200px;
        }
    </style>
</head>
<body>
    <header id="myHeader"></header>
    <button id="colorBTN">Change the color!</button><br>

    <img src="quokka1.jpg" alt="Qute quokka 1" id="quokkaImg"><br>
    <button id="toggleBTN">Show the second one!</button>

    <script src="script.js"></script>
</body>
</html>










//w3schools//

  // w3schools //
  
    // Get the expanded image
    var expandImg = document.getElementById("expandedImg");
    // Get the image text
    var imgText = document.getElementById("imgtext");
    // Use the same src in the expanded image as the image being clicked on from the grid
    expandImg.src = imgs.src;
    // Use the value of the alt attribute of the clickable image as text inside the expanded image
    imgText.innerHTML = imgs.alt;
    // Show the container element (hidden with CSS)
    expandImg.parentElement.style.display = "block";
  }